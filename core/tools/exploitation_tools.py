#!/usr/bin/env	python
# -*- coding: utf-8 -*-

import os,sys
from core.tools import options

#colors
green = "\033[1;32m"
red = "\033[1;31m"
reset = "\033[0m"
yellow = "\033[33m"

class category_element(object):

	def __init__(self):
		self.title = "--=[Exploitation Tools:"

	def set_agv(self, argv):
		self.argv = argv

	def main(self, name):
		name = name.replace('core/tools/', "")
		self.view_tools()
		action = False
		while action == False:
			try:
				option = raw_input("--=[kat(%s%s%s)â€º " %(yellow,name,reset))
			except KeyboardInterrupt:
				print "Closing, bye! - Kalitools"
			try:
				if option == "back":
					break
				elif option == "clear":
					os.system('clear')
				elif option == "help":
					print """ Help
	 <option>	Select option
	 back		Go back
	 view 		See list of tools
	 clear		Clean screen
					"""
				elif option == "view":
					self.view_tools()
				elif int(option) in range(1,19):
					self.install(option)
				elif option == "99":
					self.install(option)
				else:
					print red+"Sorry, that was an invalid command!"+reset
			except ValueError:
				pass
			
	def view_tools(self):
		os.system('clear')
		print green+self.title+reset
		print """
	1) Armitage               10) exploitdb
	2) Backdoor Factory       11) jboss-autopwn
	3) BeEF                   12) Linux Exploit Suggester
	4) cisco-auditing-tool    13) Maltego Teet
	5) cisco-global-exploiter 14) SET
	6) cisco-ocs              15) ShellNoob
	7) cisco-torch            16) sqlmap
	8) Commix                 17) THC-IPV6
	9) crackle                18) Yersinia \n
	99) ALL\n
%sInsert the number of the tool to install it%s""" %(green,reset)
	
	def install(self, option):
		if option == "1":
			cmd = os.system("sudo apt-get install armitage")
		elif option == "2":
			cmd = os.system("sudo apt-get install backdoor-factory")
		elif option == "3":
			cmd = os.system("sudo apt-get install beef-xss")
		elif option == "4":
			cmd = os.system("sudo apt-get install cisco-auditing-tool")
		elif option == "5":
			cmd = os.system("sudo apt-get install cisco-global-exploiter")
		elif option == "6":
			cmd = os.system("sudo apt-get install cisco-ocs")
		elif option == "7":
			cmd = os.system("sudo apt-get install cisco-torch")
		elif option == "8":
			print "\nManual installation is required for: Commix"
			print "Please visit: https://github.com/commixproject/commix\n"
		elif option == "9":
			cmd = os.system("sudo apt-get install crackle")
		elif option == "10":
			cmd = os.system("sudo apt-get install exploitdb")
		elif option == "11":
			cmd = os.system("sudo apt-get install jboss-autopwn")
		elif option == "12":
			cmd = os.system("sudo apt-get install linux-exploit-suggester")
		elif option == "13":
			cmd = os.system("sudo apt-get install maltego-teeth")
		elif option == "14":
			cmd = os.system("sudo apt-get install set")
		elif option == "15":
			cmd = os.system("sudo apt-get install shellnoob")
		elif option == "16":
			cmd = os.system("sudo apt-get install sqlmap")
		elif option == "17":
			cmd = os.system("sudo apt-get install thc-ipv6")
		elif option == "18":
			cmd = os.system("sudo apt-get install yersinia")
		elif option == "99":
			cmd = os.system("sudo apt-get install -y armitage backdoor-factory beef-xss cisco-auditing-tool cisco-global-exploiter cisco-ocs")
			cmd = os.system("sudo apt-get install -y cisco-torch crackle exploitdb jboss-autopwn linux-exploit-suggester maltego-teeth set")
			cmd = os.system("sudo apt-get install -y shellnoob sqlmap thc-ipv6 yersinia")
			cmd = os.system("sudo apt-get -f install")