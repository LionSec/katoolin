#!/usr/bin/env	python
# -*- coding: utf-8 -*-

import os,sys

#colors
green = "\033[1;32m"
red = "\033[1;31m"
reset = "\033[0m"
yellow = "\033[33m"

class category_element(object):

	def __init__(self):
		self.title = "--=[Vulnerability Analysis:"

	def set_agv(self, argv):
		self.argv = argv

	def main(self, name):
		name = name.replace('core/tools/', "")
		self.view_tools()
		action = False
		while action == False:
			try:
				option = raw_input("--=[kat(%s%s%s)â€º " %(yellow,name,reset))
			except KeyboardInterrupt:
				print "Closing, bye! - Kalitools"
			try:
				if option == "back":
					break
				elif option == "clear":
					os.system('clear')
				elif option == "help":
					print """ Help
	 <option>	Select option
	 back		Go back
	 view 		See list of tools
	 clear		Clean screen
					"""
				elif option == "view":
					self.view_tools()
				elif int(option) in range(1,35):
					self.install(option)
				elif option == "99":
					self.install(option)
				else:
					print red+"Sorry, that was an invalid command!"+reset
			except ValueError:
				pass
				
	def view_tools(self):
		os.system('clear')
		print green+self.title+reset
		print """
	1) BBQSQL                        18) ohrwurm
	2) BED                           19) openvas-administrator
	3) cisco-auditing-tool           20) openvas-cli
	4) cisco-global-exploiter        21) openvas-manager
	5) cisco-ocs                     22) openvas-scanner
	6) cisco-torch                   23) Oscanner
	7) copy-router-config            24) Powerfuzzer
	8) DBPwAudit                     25) sfuzz
	9) Doona                         26) SidGuesser
	10) DotDotPwn                    27) SIPArmyKnife
	11) Greenbone Security Assistant 28) sqlmap
	12) GSD                          29) Sqlninja
	13) HexorBase                    30) sqlsus
	14) Inguma                       31) THC-IPV6
	15) jSQL                         32) tnscmd10g
	16) Lynis                        33) unix-privesc-check
	17) Nmap                         34) Yersinia\n
	99) ALL\n
%sInsert the number of the tool to install it%s""" %(green,reset)

	def install(self, option):
		if option == "1":
			cmd = os.system("sudo apt install bbqsql")
		elif option == "2":
			cmd = os.system("sudo apt install bed")
		elif option == "3":
			cmd = os.system("sudo apt install cisco-auditing-tool")
		elif option == "4":
			cmd = os.system("sudo apt install cisco-global-exploiter")
		elif option == "5":
			cmd = os.system("sudo apt install cisco-ocs")
		elif option == "6":
			cmd = os.system("sudo apt install cisco-torch")
		elif option == "7":
			cmd = os.system("sudo apt install copy-router-config")
		elif option == "8":
			print "\nManual installation is required for: DBPwAudit"
			print "Please visit: http://www.cqure.net/wp/tools/database/dbpwaudit/\n"
		elif option == "9":
			cmd = os.system("sudo apt install doona")
		elif option == "10":
			cmd = os.system("sudo apt install dotdotpwn")
		elif option == "11":
			cmd = os.system("sudo apt install greenbone-security-assistant")
		elif option == "12":
			print "\nManual installation is required for: GSD"
			print "Please visit: http://git.kali.org/gitweb/?p=packages/gsd.git;a=summary\n"
		elif option == "13":
			cmd = os.system("sudo apt install hexorbase")
		elif option == "14":
			print "\nManual installation is required for: Inguma"
			print "Please visit: https://inguma.eu/projects/inguma\n"
		elif option == "15":
			cmd = os.system("sudo apt install jsql")
		elif option == "16":
			cmd = os.system("sudo apt install lynis")
		elif option == "17":
			cmd = os.system("sudo apt install nmap")
		elif option == "18":
			cmd = os.system("sudo apt install ohrwurm")
		elif option == "19":
			cmd = os.system("sudo apt install openvas-administrator")
		elif option == "20":
			cmd = os.system("sudo apt install openvas-cli")
		elif option == "21":
			cmd = os.system("sudo apt install openvas-manager")
		elif option == "22":
			cmd = os.system("sudo apt install openvas-scanner")
		elif option == "23":
			cmd = os.system("sudo apt install oscanner")
		elif option == "24":
			cmd = os.system("sudo apt install powerfuzzer")
		elif option == "25":
			cmd = os.system("sudo apt install sfuzz")
		elif option == "26":
			cmd = os.system("sudo apt install sidguesser")
		elif option == "27":
			cmd = os.system("sudo apt install siparmyknife")
		elif option == "28":
			cmd = os.system("sudo apt install sqlmap")
		elif option == "29":
			cmd = os.system("sudo apt install sqlninja")
		elif option == "30":
			cmd = os.system("sudo apt install sqlsus")
		elif option == "31":
			cmd = os.system("sudo apt install thc-ipv6")
		elif option == "32":
			cmd = os.system("sudo apt install tnscmd10g")
		elif option == "33":
			cmd = os.system("sudo apt install unix-privesc-check")
		elif option == "34":
			cmd = os.system("sudo apt install yersinia")
		elif option == "99":
			cmd = os.system("sudo apt install -y bbqsql bed cisco-auditing-tool cisco-global-exploiter cisco-ocs cisco-torch")
			cmd = os.system("sudo apt install -y copy-router-config doona dotdotpwn greenbone-security-assistant hexorbase jsql")
			cmd = os.system("sudo apt install -y lynis nmap ohrwurm openvas-administrator openvas-cli openvas-manager openvas-scanner")
			cmd = os.system("sudo apt install -y oscanner powerfuzzer sfuzz sidguesser siparmyknife sqlmap sqlninja sqlsus thc-ipv6 tnscmd10g")
			cmd = os.system("sudo apt install -y unix-privesc-check yersinia")
			cmd = os.system("sudo apt -f install")